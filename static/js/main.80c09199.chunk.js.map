{"version":3,"sources":["components/Header.jsx","components/Blockquote.jsx","data.js","components/Experience.jsx","components/Sidebar.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","options","root","rootMargin","threshold","callback","entries","forEach","entry","console","log","intersectionRatio","document","body","classList","remove","add","scrollTrackerRef","createRef","observer","IntersectionObserver","inherits","createClass","key","value","observe","current","react_default","a","createElement","react","class","className","href","index_es","icon","faAt","faPhone","id","ref","Component","Blockquote","_ref","text","defaultProps","experience","name","location","positions","title","start","end","highlights","description","Experience","employers","map","_ref2","highlight","Sidebar","Footer","year","Date","getFullYear","App","Header_Header","Blockquote_Blockquote","Experience_Experience","Sidebar_Sidebar","Footer_Footer","Boolean","window","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80c09199.chunk.js","sourcesContent":["import React, { Component, Fragment, createRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPhone, faAt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport class Header extends Component {\r\n  options = {\r\n    root: null,\r\n    rootMargin: \"-40px\",\r\n    threshold: [0, 1]\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.scrollTrackerRef = createRef();\r\n    this.observer = new IntersectionObserver(this.callback, this.options);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.observer.observe(this.scrollTrackerRef.current);\r\n  }\r\n\r\n  callback = entries => {\r\n    entries.forEach(entry => {\r\n      console.log(entry);\r\n      if (entry.intersectionRatio > 0) {\r\n        return document.body.classList.remove(\"scrolled\");\r\n      }\r\n      document.body.classList.add(\"scrolled\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <header class=\"\">\r\n          <h1>\r\n            Brian<strong>Hadaway</strong>\r\n          </h1>\r\n          <h2>\r\n            Brian<strong>Hadaway</strong>\r\n          </h2>\r\n          <div className=\"contact\">\r\n            <div className=\"text\">\r\n              <a href=\"mailto:brianhadaway@gmail.com\">brianhadaway@gmail.com</a>\r\n              <br />\r\n              <a href=\"tel:615.496.4029\">615.496.4029</a>\r\n            </div>\r\n            <div className=\"icons\">\r\n              <a href=\"mailto:brianhadaway@gmail.com\">\r\n                <FontAwesomeIcon icon={faAt} />\r\n              </a>{\" \"}\r\n              <a href=\"tel:615.496.4029\">\r\n                <FontAwesomeIcon icon={faPhone} />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <div id=\"scroll-tracker\" ref={this.scrollTrackerRef} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Blockquote = ({ text }) => {\r\n  return <blockquote>{text}</blockquote>;\r\n};\r\n\r\nBlockquote.defaultProps = {\r\n  text:\r\n    \"Software Developer with 12+ years of experience building user interfaces for a variety of clients from small businesses to Fortune 500 organizations. Skilled at building interactive experiences for the web and other mediums. Highly adaptable with a versatile UI-building skill set. Adept at communicating complex technical concepts in plain English.\"\r\n};\r\n","export const experience = {\r\n  title: \"Experience\",\r\n  employers: [\r\n    {\r\n      name: \"Envestnet Tamarac\",\r\n      location: \"Seattle, WA\",\r\n      positions: [\r\n        {\r\n          title: \"UI Engineering Team Lead\",\r\n          start: \"June 2019\",\r\n          end: \"Present\"\r\n        },\r\n        {\r\n          title: \"Senior UI Engineer\",\r\n          start: \"April 2017\",\r\n          end: \"June 2019\"\r\n        }\r\n      ],\r\n      highlights: [\r\n        \"Own UI feature development for financial trading and reporting software with over $1.2 trillion in assets under management\",\r\n        \"Collaborate with product owners and designers to conceptualize, prototype and build new features\",\r\n        \"Streamline UX by integrating trading and reporting features\",\r\n        \"Build and maintain reusable component libraries with React, Redux, Bootstrap and Storybook\",\r\n        \"Write React unit tests using Jest and Enzyme\",\r\n        \"Automate React component integration testing using Cypress\",\r\n        \"Automate end-to-end mobile testing using Appium, Mocha and Chai\",\r\n        \"Develop web views for Android and iOS applications\",\r\n        \"Improve front end code quality via paired programming and code reviews\",\r\n        \"Work with backend engineers to architect and document RESTful APIs\",\r\n        \"Regularly demo new UI features for management and product teams\",\r\n        \"Give presentations on UI topics to 100+ member engineering team\",\r\n        \"Administer technical interviews for prospective UI engineers\",\r\n        \"Onboard new team members\"\r\n      ]\r\n    },\r\n    {\r\n      name: \"Possible\",\r\n      location: \"Seattle, WA\",\r\n      positions: [\r\n        {\r\n          title: \"Senior Developer\",\r\n          start: \"August 2013\",\r\n          end: \"April 2017\"\r\n        }\r\n      ],\r\n      description: \"Clients included AT&T, Coca-Cola, and TDAmeritrade\",\r\n      highlights: [\r\n        \"Collaborated across disciplines (creative, strategy, analytics, etc.) to concept, prototype and build user interfaces using appropriate technologies\",\r\n        \"Worked with Program Managers and discipline leads to ensure projects are scoped and estimated correctly and completed on time and to specification\",\r\n        \"Documented and socialized best practices related to front end development\",\r\n        \"Evaluated technical feasibility of designed solutions\",\r\n        \"Delegated tasks to junior developers and review their code\",\r\n        \"Implemented tools and developed processes to ensure code quality\",\r\n        \"Packaged code and supported deployment of releases\",\r\n        \"Supported new business initiatives by providing technical input\",\r\n        \"Collaborated with remote development teams globally\"\r\n      ]\r\n    },\r\n    {\r\n      name: \"Nordstrom\",\r\n      location: \"Seattle, WA\",\r\n      positions: [\r\n        {\r\n          title: \"Senior Interactive Developer\",\r\n          start: \"March 2013\",\r\n          end: \"August 2013\"\r\n        }\r\n      ],\r\n      highlights: [\r\n        \"Led front end development for Nordstrom.com Personalization\",\r\n        \"Provided coaching and mentorship for junior developers\",\r\n        \"Recommended best practices for the Interactive Development team\"\r\n      ]\r\n    },\r\n    {\r\n      name: \"Roundarch\",\r\n      location: \"Chicago, IL\",\r\n      positions: [\r\n        {\r\n          title: \"Senior Consultant, Technical Lead\",\r\n          start: \"July 2011\",\r\n          end: \"March 2013\"\r\n        },\r\n        {\r\n          title: \"Consultant II, Flash Developer\",\r\n          start: \"March 2010\",\r\n          end: \"July 2011\"\r\n        }\r\n      ],\r\n      description: \"Clients included William Blair and Bloomberg.\",\r\n      highlights: [\r\n        \"Led front end development for single-page web apps and websites\",\r\n        \"Made architectural decisions about application front ends\",\r\n        \"Oversaw the work of junior developers\",\r\n        \"Worked effectively  with remote teams spanning various time zones and on-site with client teams in Chicago and New York\",\r\n        \"Transitioned from Flash developer to web standards developer\"\r\n      ]\r\n    },\r\n    {\r\n      name: \"Oncall Interactive\",\r\n      location: \"Chicago, IL\",\r\n      positions: [\r\n        {\r\n          title: \"Senior Flash Developer\",\r\n          start: \"August 2008\",\r\n          end: \"March 2010\"\r\n        }\r\n      ],\r\n      description:\r\n        \"Clients included Nike, McDonalds, FX, and the Chicago Symphony Orchestra\",\r\n      highlights: [\r\n        \"Developed web sites and applications using Flash (AS2/3) and web standards\",\r\n        \"Created motion graphics for digital signage in Times Square\",\r\n        \"Recommended best practices for the Interactive Development team\"\r\n      ]\r\n    },\r\n    {\r\n      name: \"Anode\",\r\n      location: \"Nashville, TN\",\r\n      positions: [\r\n        {\r\n          title: \"Flash Developer\",\r\n          start: \"February 2008\",\r\n          end: \"August 2008\"\r\n        }\r\n      ],\r\n      highlights: [\r\n        \"Developed interactive touch screen kiosks and digital signage for museum installations using Flash (ActionScript 2)\"\r\n      ]\r\n    }\r\n  ]\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { experience } from \"../data\";\r\n\r\nexport const Experience = () => {\r\n  const { title, employers } = experience;\r\n  return (\r\n    <div className=\"experience\">\r\n      <h2 class=\"group-title\">{title}</h2>\r\n\r\n      {employers.map(\r\n        ({ name, location, positions, description, highlights }) => {\r\n          return (\r\n            <section>\r\n              <article>\r\n                <div class=\"contents\">\r\n                  <h3>\r\n                    <strong>{name}</strong> | {location}\r\n                  </h3>\r\n\r\n                  {positions.map(({ title, start, end }) => {\r\n                    return (\r\n                      <Fragment>\r\n                        <h4>{title}</h4>\r\n                        <p className=\"meta\">\r\n                          {start} to {end}\r\n                        </p>\r\n                      </Fragment>\r\n                    );\r\n                  })}\r\n\r\n                  {description && <p className=\"meta\">{description}</p>}\r\n                </div>\r\n              </article>\r\n              {highlights && (\r\n                <ul>\r\n                  {highlights.map(highlight => (\r\n                    <li>{highlight}</li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </section>\r\n          );\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Sidebar = () => {\r\n  return (\r\n    <aside>\r\n      <div class=\"contents\">\r\n        <div class=\"details\">\r\n          <h3>Skills and Interests</h3>\r\n          <p>\r\n            JavaScript, React, Redux, Jest, Enzyme, Cypress, jQuery, CSS3, SCSS,\r\n            data grids\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Footer = () => {\r\n  const year = new Date().getFullYear();\r\n  return (\r\n    <footer>\r\n      <p>© {year} Brian Hadaway</p>\r\n    </footer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\n\r\nimport { Header } from \"./components/Header\";\r\nimport { Blockquote } from \"./components/Blockquote\";\r\nimport { Experience } from \"./components/Experience\";\r\nimport { Sidebar } from \"./components/Sidebar\";\r\nimport { Footer } from \"./components/Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Blockquote />\r\n\r\n      <div class=\"container\">\r\n        <div class=\"scrolling-content categories\">\r\n          <Experience />\r\n        </div>\r\n        <Sidebar />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}